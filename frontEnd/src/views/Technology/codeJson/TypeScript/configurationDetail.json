{
  "basicConfig": {
    "code": "// 基础tsconfig.json配置\n{\n  \"compilerOptions\": {\n    // 编译目标\n    \"target\": \"ES2020\",\n    \"module\": \"ESNext\",\n    \"lib\": [\"ES2020\", \"DOM\", \"DOM.Iterable\"],\n    \n    // 模块解析\n    \"moduleResolution\": \"node\",\n    \"allowSyntheticDefaultImports\": true,\n    \"esModuleInterop\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \n    // 类型检查\n    \"strict\": true,\n    \"noImplicitAny\": true,\n    \"strictNullChecks\": true,\n    \"strictFunctionTypes\": true,\n    \"noImplicitReturns\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \n    // 输出\n    \"outDir\": \"./dist\",\n    \"rootDir\": \"./src\",\n    \"declaration\": true,\n    \"declarationMap\": true,\n    \"sourceMap\": true,\n    \n    // 其他\n    \"skipLibCheck\": true,\n    \"resolveJsonModule\": true\n  },\n  \"include\": [\n    \"src/**/*\"\n  ],\n  \"exclude\": [\n    \"node_modules\",\n    \"dist\",\n    \"**/*.test.ts\"\n  ]\n}",
    "language": "json",
    "title": "基础配置"
  },
  "strictMode": {
    "code": "// 严格模式配置\n{\n  \"compilerOptions\": {\n    // 启用所有严格类型检查选项\n    \"strict\": true,\n    \n    // 或者单独配置每个选项\n    \"noImplicitAny\": true,           // 禁止隐式any类型\n    \"strictNullChecks\": true,        // 严格的null检查\n    \"strictFunctionTypes\": true,     // 严格的函数类型检查\n    \"strictBindCallApply\": true,     // 严格的bind/call/apply检查\n    \"strictPropertyInitialization\": true, // 严格的属性初始化检查\n    \"noImplicitThis\": true,          // 禁止隐式this\n    \"alwaysStrict\": true,            // 总是以严格模式解析\n    \n    // 额外的严格检查\n    \"noImplicitReturns\": true,       // 函数必须有返回值\n    \"noFallthroughCasesInSwitch\": true, // switch语句必须有break\n    \"noUncheckedIndexedAccess\": true,   // 索引访问可能为undefined\n    \"noImplicitOverride\": true,     // 重写方法必须使用override关键字\n    \"exactOptionalPropertyTypes\": true, // 精确的可选属性类型\n    \n    // 未使用代码检查\n    \"noUnusedLocals\": true,          // 检查未使用的局部变量\n    \"noUnusedParameters\": true,     // 检查未使用的参数\n    \"allowUnusedLabels\": false,     // 不允许未使用的标签\n    \"allowUnreachableCode\": false   // 不允许无法访问的代码\n  }\n}\n\n// 示例：严格模式下的代码\ninterface User {\n  name: string;\n  age?: number; // 可选属性\n}\n\n// 启用strictNullChecks后\nfunction getUser(): User | null {\n  return Math.random() > 0.5 ? { name: 'Alice' } : null;\n}\n\nconst user = getUser();\n// 错误：Object is possibly 'null'\n// console.log(user.name);\n\n// 正确的写法\nif (user) {\n  console.log(user.name);\n}\n\n// 或使用可选链\nconsole.log(user?.name);",
    "language": "json",
    "title": "严格模式配置"
  },
  "pathMapping": {
    "code": "// 路径映射配置\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"paths\": {\n      // 别名映射\n      \"@/*\": [\"src/*\"],\n      \"@components/*\": [\"src/components/*\"],\n      \"@utils/*\": [\"src/utils/*\"],\n      \"@types/*\": [\"src/types/*\"],\n      \"@api/*\": [\"src/api/*\"],\n      \"@assets/*\": [\"src/assets/*\"],\n      \n      // 多路径映射\n      \"@shared/*\": [\n        \"src/shared/*\",\n        \"../shared/*\"\n      ],\n      \n      // 库映射\n      \"lodash\": [\"node_modules/lodash\"],\n      \"react\": [\"node_modules/@types/react\"]\n    },\n    \n    // 根目录\n    \"rootDirs\": [\n      \"src\",\n      \"generated\"\n    ],\n    \n    // 类型根目录\n    \"typeRoots\": [\n      \"node_modules/@types\",\n      \"src/types\"\n    ],\n    \n    // 类型引用\n    \"types\": [\n      \"node\",\n      \"jest\",\n      \"react\"\n    ]\n  }\n}\n\n// 使用示例\n// 原来的导入\n// import Button from '../../../components/Button';\n// import { formatDate } from '../../../utils/date';\n\n// 使用路径映射后\nimport Button from '@components/Button';\nimport { formatDate } from '@utils/date';\nimport type { User } from '@types/user';\n\n// 在Webpack中配置对应的alias\n// webpack.config.js\nmodule.exports = {\n  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, 'src'),\n      '@components': path.resolve(__dirname, 'src/components'),\n      '@utils': path.resolve(__dirname, 'src/utils')\n    }\n  }\n};",
    "language": "json",
    "title": "路径映射"
  },
  "projectReferences": {
    "code": "// 项目引用配置\n// 主项目 tsconfig.json\n{\n  \"compilerOptions\": {\n    \"composite\": true,\n    \"declaration\": true,\n    \"declarationMap\": true,\n    \"rootDir\": \"src\",\n    \"outDir\": \"dist\"\n  },\n  \"references\": [\n    { \"path\": \"../shared\" },\n    { \"path\": \"../utils\" },\n    { \"path\": \"../components\" }\n  ]\n}\n\n// 共享库 shared/tsconfig.json\n{\n  \"compilerOptions\": {\n    \"composite\": true,\n    \"declaration\": true,\n    \"outDir\": \"dist\",\n    \"rootDir\": \"src\"\n  },\n  \"include\": [\"src/**/*\"]\n}\n\n// 工具库 utils/tsconfig.json\n{\n  \"compilerOptions\": {\n    \"composite\": true,\n    \"declaration\": true,\n    \"outDir\": \"dist\",\n    \"rootDir\": \"src\"\n  },\n  \"references\": [\n    { \"path\": \"../shared\" }\n  ],\n  \"include\": [\"src/**/*\"]\n}\n\n// 构建脚本\n// package.json\n{\n  \"scripts\": {\n    \"build\": \"tsc --build\",\n    \"build:watch\": \"tsc --build --watch\",\n    \"clean\": \"tsc --build --clean\"\n  }\n}\n\n// 项目结构\n/*\nmonorepo/\n├── packages/\n│   ├── shared/\n│   │   ├── src/\n│   │   └── tsconfig.json\n│   ├── utils/\n│   │   ├── src/\n│   │   └── tsconfig.json\n│   └── app/\n│       ├── src/\n│       └── tsconfig.json\n└── tsconfig.json\n*/",
    "language": "json",
    "title": "项目引用"
  },
  "environmentConfig": {
    "code": "// 环境特定配置\n\n// 开发环境 tsconfig.dev.json\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"sourceMap\": true,\n    \"removeComments\": false,\n    \"noEmitOnError\": false,\n    \"incremental\": true,\n    \"tsBuildInfoFile\": \".tsbuildinfo\"\n  },\n  \"include\": [\n    \"src/**/*\",\n    \"tests/**/*\"\n  ]\n}\n\n// 生产环境 tsconfig.prod.json\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"sourceMap\": false,\n    \"removeComments\": true,\n    \"noEmitOnError\": true,\n    \"declaration\": true,\n    \"declarationMap\": false\n  },\n  \"exclude\": [\n    \"tests/**/*\",\n    \"**/*.test.ts\",\n    \"**/*.spec.ts\"\n  ]\n}\n\n// 测试环境 tsconfig.test.json\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"types\": [\"jest\", \"node\"],\n    \"esModuleInterop\": true,\n    \"allowSyntheticDefaultImports\": true\n  },\n  \"include\": [\n    \"src/**/*\",\n    \"tests/**/*\",\n    \"**/*.test.ts\",\n    \"**/*.spec.ts\"\n  ]\n}\n\n// Node.js环境 tsconfig.node.json\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"module\": \"CommonJS\",\n    \"target\": \"ES2018\",\n    \"lib\": [\"ES2018\"],\n    \"types\": [\"node\"],\n    \"moduleResolution\": \"node\"\n  }\n}\n\n// 构建脚本\n// package.json\n{\n  \"scripts\": {\n    \"dev\": \"tsc --project tsconfig.dev.json --watch\",\n    \"build\": \"tsc --project tsconfig.prod.json\",\n    \"test\": \"jest --config jest.config.js\",\n    \"type-check\": \"tsc --noEmit\"\n  }\n}",
    "language": "json",
    "title": "环境配置"
  },
  "advancedOptions": {
    "code": "// 高级编译选项\n{\n  \"compilerOptions\": {\n    // 实验性功能\n    \"experimentalDecorators\": true,     // 启用装饰器\n    \"emitDecoratorMetadata\": true,     // 发出装饰器元数据\n    \"useDefineForClassFields\": true,   // 使用define语义定义类字段\n    \n    // 模块相关\n    \"allowUmdGlobalAccess\": true,      // 允许从模块访问UMD全局变量\n    \"moduleSuffixes\": [\".ios\", \".native\", \"\"], // 模块后缀\n    \"resolveJsonModule\": true,         // 解析JSON模块\n    \"allowArbitraryExtensions\": true,  // 允许任意扩展名\n    \n    // 输出控制\n    \"preserveConstEnums\": true,        // 保留const枚举\n    \"preserveValueImports\": true,      // 保留值导入\n    \"importsNotUsedAsValues\": \"preserve\", // 导入未使用值的处理\n    \"verbatimModuleSyntax\": true,      // 逐字模块语法\n    \n    // JSX相关\n    \"jsx\": \"react-jsx\",               // JSX工厂\n    \"jsxFactory\": \"React.createElement\", // JSX工厂函数\n    \"jsxFragmentFactory\": \"React.Fragment\", // JSX片段工厂\n    \"jsxImportSource\": \"react\",       // JSX导入源\n    \n    // 性能优化\n    \"incremental\": true,               // 增量编译\n    \"tsBuildInfoFile\": \".tsbuildinfo\", // 构建信息文件\n    \"assumeChangesOnlyAffectDirectDependencies\": true,\n    \n    // 调试和诊断\n    \"listFiles\": false,                // 列出编译的文件\n    \"listEmittedFiles\": false,         // 列出发出的文件\n    \"traceResolution\": false,          // 跟踪模块解析\n    \"diagnostics\": false,              // 显示诊断信息\n    \"extendedDiagnostics\": false,      // 扩展诊断信息\n    \n    // 兼容性\n    \"charset\": \"utf8\",                // 字符集\n    \"newLine\": \"lf\",                  // 换行符\n    \"stripInternal\": true,             // 移除内部声明\n    \"suppressExcessPropertyErrors\": false, // 抑制多余属性错误\n    \"suppressImplicitAnyIndexErrors\": false, // 抑制隐式any索引错误\n    \n    // 插件\n    \"plugins\": [\n      {\n        \"name\": \"typescript-plugin-css-modules\"\n      },\n      {\n        \"name\": \"@typescript-eslint/typescript-estree\"\n      }\n    ]\n  },\n  \n  // 监听选项\n  \"watchOptions\": {\n    \"watchFile\": \"useFsEvents\",\n    \"watchDirectory\": \"useFsEvents\",\n    \"fallbackPolling\": \"dynamicPriority\",\n    \"synchronousWatchDirectory\": true,\n    \"excludeDirectories\": [\"**/node_modules\", \"_tmp\"]\n  },\n  \n  // 类型获取\n  \"typeAcquisition\": {\n    \"enable\": true,\n    \"include\": [\"jquery\"],\n    \"exclude\": [\"jest\", \"mocha\"]\n  }\n}",
    "language": "json",
    "title": "高级选项"
  }
}