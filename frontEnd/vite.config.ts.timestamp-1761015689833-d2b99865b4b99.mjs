// vite.config.ts
import react from "file:///E:/github/keru_blog/node_modules/.pnpm/@vitejs+plugin-react@4.7.0_vite@5.4.20_@types+node@22.18.1_sass@1.92.1_/node_modules/@vitejs/plugin-react/dist/index.js";
import path, { resolve } from "path";
import UnoCSS from "file:///E:/github/keru_blog/node_modules/.pnpm/unocss@0.62.4_postcss@8.4.21_rollup@4.50.1_vite@5.4.20_@types+node@22.18.1_sass@1.92.1_/node_modules/unocss/dist/vite.mjs";
import { defineConfig } from "file:///E:/github/keru_blog/node_modules/.pnpm/vite@5.4.20_@types+node@22.18.1_sass@1.92.1/node_modules/vite/dist/node/index.js";
import { createSvgIconsPlugin } from "file:///E:/github/keru_blog/node_modules/.pnpm/vite-plugin-svg-icons@2.0.1_vite@5.4.20_@types+node@22.18.1_sass@1.92.1_/node_modules/vite-plugin-svg-icons/dist/index.mjs";

// src/build/proxy.ts
var proxyConfigMappings = {
  // 开发环境调用的接口
  dev: {
    prefix: "/dev-api",
    target: "http://127.0.0.1:5566"
  },
  // 生产环境调用的接口
  prod: {
    prefix: "/prod-api",
    target: "http://127.0.0.1:2130"
  }
};
function getProxyConfig(envType = "dev") {
  return proxyConfigMappings[envType];
}
function createViteProxy(isUseProxy = true, proxyType, basePath) {
  if (!isUseProxy) return void 0;
  const proxyConfig = getProxyConfig(proxyType);
  const proxy = {
    // API 代理
    [proxyConfig.prefix]: {
      target: proxyConfig.target,
      changeOrigin: true,
      // 将前端代理前缀替换为服务端全局前缀 /api，确保匹配后端 Inversify 的 rootPath
      rewrite: (path2) => path2.replace(new RegExp("^" + basePath), "/api")
    },
    // 静态文件代理 - 用于图片等静态资源
    "/static": {
      target: proxyConfig.target,
      changeOrigin: true,
      // 静态文件路径不需要重写，直接转发
      rewrite: (path2) => path2
    }
  };
  return proxy;
}

// vite.config.ts
var __vite_injected_original_dirname = "E:\\github\\keru_blog\\frontEnd";
var vite_config_default = defineConfig({
  plugins: [
    react(),
    UnoCSS(),
    createSvgIconsPlugin({
      // Specify the icon folder to be cached
      iconDirs: [path.resolve(process.cwd(), "src/assets/svgs")],
      // Specify symbolId format
      symbolId: "[name]"
    })
  ],
  server: {
    port: 9394,
    // 你可以根据需要更改端口
    proxy: createViteProxy(true, "dev", "/dev-api")
  },
  resolve: {
    alias: {
      "@": resolve(__vite_injected_original_dirname, "./src"),
      // 共享代码别名
      shared: resolve(__vite_injected_original_dirname, "../shared/src"),
      "shared/components": resolve(__vite_injected_original_dirname, "../shared/src/components"),
      "shared/utils": resolve(__vite_injected_original_dirname, "../shared/src/utils"),
      "shared/types": resolve(__vite_injected_original_dirname, "../shared/src/types"),
      "shared/styles": resolve(__vite_injected_original_dirname, "../shared/src/styles"),
      // 跨项目组件引用别名 - 支持引用 management 项目组件（保留兼容性）
      "@management": resolve(__vite_injected_original_dirname, "../management/src"),
      "@management-components": resolve(__vite_injected_original_dirname, "../management/src/components"),
      "@management-utils": resolve(__vite_injected_original_dirname, "../management/src/utils"),
      "@management-types": resolve(__vite_injected_original_dirname, "../management/src/types")
    },
    mainFields: ["module", "main"]
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,
