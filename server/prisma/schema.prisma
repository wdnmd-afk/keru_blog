// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @unique
  email      String       @unique
  name       String?
  admin      Boolean
  password   String       @default(dbgenerated("123456"))
  random     Int          @default(dbgenerated("10"))
  UserDetail UserDetail[]
  files      File[]
  todos      Todo[]
}

model UserDetail {
  id          String  @id @unique
  name        String?
  address     String?
  phoneNumber String?
  bio         String?
  // 其他详细信息字段...
  sex         String?
  age         Int?
  avatar      String
  user        User    @relation(fields: [userId], references: [id])
  userId      String
}

model File {
  id           String      @id @unique
  filename     String
  mimeType     String
  size         Int
  path         String
  uploadedAt   DateTime @default(now())
  updatedAt    DateTime @updatedAt
  uploader     User     @relation(fields: [uploaderId], references: [id])
  uploaderId   String
}


model Technology {
  id          String   @id @unique
  name        String
  description String?
  type        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Topic {
  id           String   @id @unique
  title        String
  content      String   @db.Text
  technologyId String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Book {
  id          String   @id @unique
  title       String
  author      String
  description String?
  coverImage  String?
  filePath    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model BookPage {
  id        String @id @unique
  bookId    String
  pageNumber Int
  content   String @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CodeSnippet {
  id           String   @id @unique
  title        String
  code         String   @db.Text
  language     String
  description  String?
  technologyId String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Todo {
  id        String   @id @unique
  content   String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  type      TodoType @default(RECENT)
}

enum TodoType {
  RECENT
  LONG_TERM
  STUDY_PLAN
}

